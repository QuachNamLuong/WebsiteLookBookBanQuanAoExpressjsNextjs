
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('./runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.17.1
 * Query Engine version: 272a37d34178c2894197e17273bf937f25acdeac
 */
Prisma.prismaVersion = {
  client: "6.17.1",
  engine: "272a37d34178c2894197e17273bf937f25acdeac"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  Serializable: 'Serializable'
});

exports.Prisma.UserScalarFieldEnum = {
  userId: 'userId',
  username: 'username',
  email: 'email',
  passwordHash: 'passwordHash',
  role: 'role'
};

exports.Prisma.ProductScalarFieldEnum = {
  productId: 'productId',
  productName: 'productName',
  quantity: 'quantity'
};

exports.Prisma.ProductImageScalarFieldEnum = {
  productImageId: 'productImageId',
  productImageName: 'productImageName',
  productId: 'productId'
};

exports.Prisma.OrderScalarFieldEnum = {
  orderId: 'orderId',
  orderTotalPrice: 'orderTotalPrice',
  userId: 'userId'
};

exports.Prisma.OrderItemScalarFieldEnum = {
  orderItemId: 'orderItemId',
  orderItemQuantity: 'orderItemQuantity',
  orderItemUnitPrice: 'orderItemUnitPrice',
  orderId: 'orderId',
  productId: 'productId'
};

exports.Prisma.CartItemScalarFieldEnum = {
  id: 'id',
  quantity: 'quantity',
  userId: 'userId',
  productId: 'productId'
};

exports.Prisma.LookBookStoryScalarFieldEnum = {
  id: 'id',
  name: 'name',
  description: 'description'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};
exports.Role = exports.$Enums.Role = {
  ADMIN: 'ADMIN',
  CUSTOMER: 'CUSTOMER'
};

exports.Prisma.ModelName = {
  User: 'User',
  Product: 'Product',
  ProductImage: 'ProductImage',
  Order: 'Order',
  OrderItem: 'OrderItem',
  CartItem: 'CartItem',
  LookBookStory: 'LookBookStory'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "D:\\Projects\\WebsiteLookBookBanQuanAoExpressjsNextjs\\backend\\src\\generated\\prisma",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "windows",
        "native": true
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "D:\\Projects\\WebsiteLookBookBanQuanAoExpressjsNextjs\\backend\\prisma\\schema.prisma",
    "isCustomOutput": true
  },
  "relativeEnvPaths": {
    "rootEnvPath": null,
    "schemaEnvPath": "../../../.env"
  },
  "relativePath": "../../../prisma",
  "clientVersion": "6.17.1",
  "engineVersion": "272a37d34178c2894197e17273bf937f25acdeac",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "sqlite",
  "postinstall": false,
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "generator client {\n  provider = \"prisma-client-js\"\n  output   = \"../src/generated/prisma\"\n}\n\ndatasource db {\n  provider = \"sqlite\"\n  url      = env(\"DATABASE_URL\")\n}\n\nenum Role {\n  ADMIN\n  CUSTOMER\n}\n\nmodel User {\n  userId       String @id @default(uuid()) @map(\"user_id\")\n  username     String @unique\n  email        String @unique\n  passwordHash String @unique @map(\"password_hash\")\n  role         Role\n\n  orders    Order[]\n  cartItems CartItem[]\n\n  @@map(\"users\")\n}\n\nmodel Product {\n\n  productId    String         @id @default(uuid()) @map(\"product_id\")\n  productName  String         @unique @map(\"product_name\")\n  quantity     Int\n  productImage ProductImage[]\n  orderItems   OrderItem[]\n  cartItems    CartItem[]\n\n  @@map(\"products\")\n}\n\nmodel ProductImage {\n\n  productImageId   String @id @default(uuid()) @map(\"product_image_id\")\n  productImageName String @unique @map(\"product_image_name\")\n  productId        String\n\n  product Product @relation(fields: [productId], references: [productId])\n\n  @@map(\"product_images\")\n}\n\nmodel Order {\n\n  orderId         String  @id @default(uuid()) @map(\"order_id\")\n  orderTotalPrice Decimal @map(\"order_total_price\")\n\n  userId String\n  user   User   @relation(fields: [userId], references: [userId])\n\n  orderItems OrderItem[]\n\n  @@map(\"orders\")\n}\n\nmodel OrderItem {\n\n  orderItemId        String  @id @default(uuid()) @map(\"order_item_id\")\n  orderItemQuantity  Int     @map(\"order_item_quantity\")\n  orderItemUnitPrice Decimal @map(\"order_item_unit_price\")\n\n  orderId String\n  order   Order  @relation(fields: [orderId], references: [orderId])\n\n  productId String\n  product   Product @relation(fields: [productId], references: [productId])\n\n  @@map(\"order_items\")\n}\n\nmodel CartItem {\n\n  id        String  @id @default(uuid())\n  quantity  Int\n  userId    String\n  user      User    @relation(fields: [userId], references: [userId])\n  productId String\n  product   Product @relation(fields: [productId], references: [productId])\n\n  @@map(\"cart_items\")\n}\n\nmodel LookBookStory {\n\n  id          String @id @default(uuid())\n  name        String\n  description String\n\n  @@map(\"look_book_stories\")\n}\n",
  "inlineSchemaHash": "ebc1e90fa87ac0c3265c535d8d3c9452ed16af5a562f87e0f6218553dc9ed1df",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"User\":{\"fields\":[{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"user_id\"},{\"name\":\"username\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"passwordHash\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"password_hash\"},{\"name\":\"role\",\"kind\":\"enum\",\"type\":\"Role\"},{\"name\":\"orders\",\"kind\":\"object\",\"type\":\"Order\",\"relationName\":\"OrderToUser\"},{\"name\":\"cartItems\",\"kind\":\"object\",\"type\":\"CartItem\",\"relationName\":\"CartItemToUser\"}],\"dbName\":\"users\"},\"Product\":{\"fields\":[{\"name\":\"productId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"product_id\"},{\"name\":\"productName\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"product_name\"},{\"name\":\"quantity\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"productImage\",\"kind\":\"object\",\"type\":\"ProductImage\",\"relationName\":\"ProductToProductImage\"},{\"name\":\"orderItems\",\"kind\":\"object\",\"type\":\"OrderItem\",\"relationName\":\"OrderItemToProduct\"},{\"name\":\"cartItems\",\"kind\":\"object\",\"type\":\"CartItem\",\"relationName\":\"CartItemToProduct\"}],\"dbName\":\"products\"},\"ProductImage\":{\"fields\":[{\"name\":\"productImageId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"product_image_id\"},{\"name\":\"productImageName\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"product_image_name\"},{\"name\":\"productId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"product\",\"kind\":\"object\",\"type\":\"Product\",\"relationName\":\"ProductToProductImage\"}],\"dbName\":\"product_images\"},\"Order\":{\"fields\":[{\"name\":\"orderId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"order_id\"},{\"name\":\"orderTotalPrice\",\"kind\":\"scalar\",\"type\":\"Decimal\",\"dbName\":\"order_total_price\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"OrderToUser\"},{\"name\":\"orderItems\",\"kind\":\"object\",\"type\":\"OrderItem\",\"relationName\":\"OrderToOrderItem\"}],\"dbName\":\"orders\"},\"OrderItem\":{\"fields\":[{\"name\":\"orderItemId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"order_item_id\"},{\"name\":\"orderItemQuantity\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"order_item_quantity\"},{\"name\":\"orderItemUnitPrice\",\"kind\":\"scalar\",\"type\":\"Decimal\",\"dbName\":\"order_item_unit_price\"},{\"name\":\"orderId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"order\",\"kind\":\"object\",\"type\":\"Order\",\"relationName\":\"OrderToOrderItem\"},{\"name\":\"productId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"product\",\"kind\":\"object\",\"type\":\"Product\",\"relationName\":\"OrderItemToProduct\"}],\"dbName\":\"order_items\"},\"CartItem\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"quantity\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"CartItemToUser\"},{\"name\":\"productId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"product\",\"kind\":\"object\",\"type\":\"Product\",\"relationName\":\"CartItemToProduct\"}],\"dbName\":\"cart_items\"},\"LookBookStory\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"}],\"dbName\":\"look_book_stories\"}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

